{"version":3,"sources":["components/app-header/app-header.jsx","components/app-header/index.js","components/app/constants.js","components/item-status-filter/item-status-filter.jsx","components/item-status-filter/index.js","components/search-panel/search-panel.jsx","components/search-panel/index.js","components/todo-list-item/todo-list-item.jsx","components/todo-list-item/index.js","components/todo-list/constants.js","components/todo-list/todo-list.jsx","components/todo-list/index.js","components/item-add-form/item-add-form.jsx","components/item-add-form/index.js","components/app/app.jsx","components/app/index.js","index.jsx"],"names":["AppHeader","toDo","done","className","FILTER_TYPES","ALL","ACTIVE","DONE","ItemStatusFilter","buttons","name","label","renderButtons","props","filterType","onFilterAdded","map","type","onClick","key","render","Component","SearchPanel","state","text","onTextChanged","value","target","onSearchTextAdded","setState","placeholder","onChange","TodoListItem","onDeleted","onToggleImportant","onToggleDone","isImportant","classNames","isDone","role","TODO_PROPERTIES","IS_IMPORTANT","IS_DONE","TodoList","todos","onToggleProperty","elements","id","itemProps","ItemAddForm","isInvalid","onLabelChange","onSubmit","event","onAdded","preventDefault","App","lastId","createTodoItem","searchText","deleteItem","filter","item","addItem","newItem","propertyName","search","match","RegExp","doneCount","length","todoCount","visibleTodos","this","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2ac2651d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AppHeader = ({ toDo, done }) => (\n  <div className=\"app-header d-flex\">\n    <h1>Todo List</h1>\n    <h2>\n      {toDo}\n      {' '}\n      more to do,\n      {' '}\n      {done}\n      {' '}\n      done\n    </h2>\n  </div>\n);\n\nAppHeader.propTypes = {\n  toDo: PropTypes.number.isRequired,\n  done: PropTypes.number.isRequired,\n};\n\nexport default AppHeader;\n","import AppHeader from './app-header';\n\nimport './app-header.css';\n\nexport default AppHeader;\n","export const FILTER_TYPES = {\n  ALL: 'all',\n  ACTIVE: 'active',\n  DONE: 'done',\n};\n\nexport default {\n  FILTER_TYPES,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FILTER_TYPES } from '../app/constants';\n\nclass ItemStatusFilter extends Component {\n  buttons = [\n    {\n      name: FILTER_TYPES.ALL,\n      label: 'All',\n    },\n    {\n      name: FILTER_TYPES.ACTIVE,\n      label: 'Active',\n    },\n    {\n      name: FILTER_TYPES.DONE,\n      label: 'Done',\n    },\n  ]\n\n  renderButtons = () => {\n    const { filterType, onFilterAdded } = this.props;\n\n    return this.buttons.map(({ label, name }) => (\n      <button\n        type=\"button\"\n        className={`btn ${filterType === name ? 'btn-info' : 'btn-outline-secondary'}`}\n        onClick={() => onFilterAdded(name)}\n        key={name}\n      >\n        {label}\n      </button>\n    ));\n  }\n\n  render = () => (\n    <div className=\"btn-group\">\n      {this.renderButtons()}\n    </div>\n  );\n}\n\nItemStatusFilter.propTypes = {\n  onFilterAdded: PropTypes.func.isRequired,\n  filterType: PropTypes.string.isRequired,\n};\n\nexport default ItemStatusFilter;\n","import ItemStatusFilter from './item-status-filter';\n\nimport './item-status-filter.css';\n\nexport default ItemStatusFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchPanel extends Component {\n  state = {\n    text: '',\n  }\n\n  onTextChanged = ({ target: { value } }) => {\n    const { onSearchTextAdded } = this.props;\n\n    onSearchTextAdded(value);\n    this.setState({ text: value });\n  }\n\n  render = () => {\n    const { text } = this.state;\n\n    return (\n      <input\n        className=\"form-control search-input\"\n        type=\"text\"\n        placeholder=\"Type to search\"\n        onChange={this.onTextChanged}\n        value={text}\n      />\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  onSearchTextAdded: PropTypes.func.isRequired,\n};\n\nexport default SearchPanel;\n","import SearchPanel from './search-panel';\n\nimport './search-panel.css';\n\nexport default SearchPanel;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst TodoListItem = ({\n  label,\n  onDeleted,\n  onToggleImportant,\n  onToggleDone,\n  isImportant,\n  isDone,\n}) => {\n  let classNames = 'todo-list-item';\n  if (isDone) {\n    classNames += ' done';\n  }\n\n  if (isImportant) {\n    classNames += ' important';\n  }\n\n  return (\n    <span className={classNames}>\n      <span\n        className=\"todo-list-item-label\"\n        onClick={onToggleDone}\n        role=\"button\"\n      >\n        {label}\n      </span>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-success btn-sm float-right\"\n        onClick={onToggleImportant}\n      >\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-danger btn-sm float-right\"\n        onClick={onDeleted}\n      >\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  );\n};\n\nTodoListItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  isImportant: PropTypes.bool.isRequired,\n  isDone: PropTypes.bool.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleImportant: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n};\n\nexport default TodoListItem;\n","import TodoListItem from './todo-list-item';\n\nimport './todo-list-item.css';\n\nexport default TodoListItem;\n","export const TODO_PROPERTIES = {\n  IS_IMPORTANT: 'isImportant',\n  IS_DONE: 'isDone',\n};\n\nexport default {\n  TODO_PROPERTIES,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoListItem from '../todo-list-item';\nimport { TODO_PROPERTIES } from './constants';\n\nconst TodoList = ({\n  todos,\n  onDeleted,\n  onToggleProperty,\n}) => {\n  const elements = todos.map(({ id, ...itemProps }) => (\n    <li key={id} className=\"list-group-item\">\n      <TodoListItem\n        {...itemProps}\n        onDeleted={() => onDeleted(id)}\n        onToggleImportant={() => onToggleProperty(id, TODO_PROPERTIES.IS_IMPORTANT)}\n        onToggleDone={() => onToggleProperty(id, TODO_PROPERTIES.IS_DONE)}\n      />\n    </li>\n  ));\n\n  return (\n    <div className=\"todo-list\">\n      <ul className=\"list-group\">\n        {elements}\n      </ul>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    isImportant: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleProperty: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import TodoList from './todo-list';\n\nimport './todo-list.css';\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ItemAddForm extends Component {\n  state = {\n    label: '',\n    isInvalid: false,\n  };\n\n  onLabelChange = ({ target: { value } }) => this.setState({ label: value });\n\n  onSubmit = (event) => {\n    const { onAdded } = this.props;\n    const { label } = this.state;\n\n    event.preventDefault();\n\n    if (label !== '') {\n      onAdded(label);\n      this.setState({ label: '', isInvalid: false });\n    } else {\n      this.setState({ isInvalid: true });\n    }\n  };\n\n  render = () => {\n    const { label, isInvalid } = this.state;\n\n    return (\n      <form\n        className=\"input-group mb-3 item-add-form\"\n        onSubmit={this.onSubmit}\n      >\n        <input\n          type=\"text\"\n          className={`form-control ${isInvalid ? 'is-invalid' : ''}`}\n          placeholder=\"What to do?\"\n          onChange={this.onLabelChange}\n          value={label}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-danger\"\n            type=\"submit\"\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nItemAddForm.propTypes = {\n  onAdded: PropTypes.func.isRequired,\n};\n\nexport default ItemAddForm;\n","import ItemAddForm from './item-add-form';\n\nimport './item-add-form.css';\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport ItemStatusFilter from '../item-status-filter';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemAddForm from '../item-add-form';\nimport { FILTER_TYPES } from './constants';\n\nclass App extends Component {\n  lastId = 100;\n\n  state = {\n    todos: [\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Todo App'),\n      this.createTodoItem('Have a dinner'),\n    ],\n    searchText: '',\n    filterType: 'all',\n  }\n\n  deleteItem = (id) => this.setState(({ todos, ...state }) => ({\n    ...state,\n    todos: todos.filter((item) => item.id !== id),\n  }));\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todos, ...state }) => ({\n      ...state,\n      todos: [...todos, newItem],\n    }));\n  };\n\n  onToggleProperty = (id, propertyName) => this.setState(({ todos, ...state }) => ({\n    ...state,\n    todos: todos.map(\n      (item) => (item.id === id\n        ? { ...item, [propertyName]: !item[propertyName] }\n        : item),\n    ),\n  }));\n\n  onSearchTextAdded = (searchText) => this.setState((state) => ({\n    ...state,\n    searchText,\n  }));\n\n  onFilterAdded = (filterType) => this.setState((state) => ({\n    ...state,\n    filterType,\n  }));\n\n  filter = (todos, filterType) => {\n    switch (filterType) {\n      case FILTER_TYPES.ACTIVE: {\n        return todos.filter(({ isDone }) => !isDone);\n      }\n      case FILTER_TYPES.DONE: {\n        return todos.filter(({ isDone }) => isDone);\n      }\n      case FILTER_TYPES.ALL:\n      default: {\n        return todos;\n      }\n    }\n  };\n\n  search = (todos, searchText) => todos\n    .filter(({ label }) => label.match(new RegExp(searchText, 'i')));\n\n  createTodoItem(label) {\n    // eslint-disable-next-line no-multi-assign\n    const id = this.lastId += 1;\n\n    return {\n      id,\n      label,\n      isImportant: false,\n      isDone: false,\n    };\n  }\n\n  render = () => {\n    const {\n      todos,\n      filterType,\n      searchText,\n    } = this.state;\n\n    const doneCount = todos.filter(({ isDone }) => isDone).length;\n    const todoCount = todos.length - doneCount;\n\n    const visibleTodos = this.search(this.filter(todos, filterType), searchText);\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader\n          toDo={todoCount}\n          done={doneCount}\n        />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            onSearchTextAdded={this.onSearchTextAdded}\n          />\n          <ItemStatusFilter\n            onFilterAdded={this.onFilterAdded}\n            filterType={filterType}\n          />\n        </div>\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleted={this.deleteItem}\n          onToggleProperty={this.onToggleProperty}\n        />\n        <ItemAddForm\n          onAdded={this.addItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from './app';\n\nimport './app.css';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}